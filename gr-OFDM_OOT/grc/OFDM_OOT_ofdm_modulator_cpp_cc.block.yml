id: OFDM_OOT_ofdm_modulator_cpp_cc
label: ofdm_modulator_cpp_cc
category: "[OFDM_OOT]"

templates:
  imports: from gnuradio import OFDM_OOT
  make: OFDM_OOT.ofdm_modulator_cpp_cc(${nfft}, ${data_carriers_idx}, ${pilot_carriers_idx}, ${pilot_carriers_vals}, ${n_guard})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
  - id: nfft
    label: nfft
    dtype: int
    default: 1024
  - id: data_carriers_idx
    label: data carriers indices
    dtype: int_vector
    default: []
  - id: pilot_carriers_idx
    label: pilot carriers indices
    dtype: int_vector
    default: []
  - id: pilot_carriers_vals
    label: pilot carriers values
    dtype: complex_vector
    default: []
  - id: n_guard
    label: n_guard
    dtype: int
    default: 128

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
  - domain: stream
    dtype: complex
    multiplicity: 1
    optional: false

outputs:
  - domain: stream
    dtype: complex
    multiplicity: 1
    optional: false

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
