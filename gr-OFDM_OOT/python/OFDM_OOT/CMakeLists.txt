# Copyright 2011 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-OFDM_OOT
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Include python install macros
########################################################################
include(GrPython)
if(NOT PYTHONINTERP_FOUND)
    return()
endif()

add_subdirectory(bindings)

########################################################################
# Install python sources
########################################################################
GR_PYTHON_INSTALL(
    FILES
    __init__.py
    ofdm_precise_sync_cc.py
    ofdm_retreive_data_sym_cc.py
    BER_bbb.py
    vector_concat.py
    test_block.py
    retrieve_vector_on_tag_cc.py
    ofdm_preamble_sync.py
    cfar_detector.py
    autocorr_cc.py
    ofdm_frame_builder.py
    ofdm_preambles.py
    Utility.py
    ofdm_sco_sync.py
    vector_assign_cc.py
    vector_build_by_idx_cc.py
    vector_retrive_by_idx_cc.py DESTINATION ${GR_PYTHON_DIR}/gnuradio/OFDM_OOT
)

########################################################################
# Handle the unit tests
########################################################################
include(GrTest)

set(GR_TEST_TARGET_DEPS gnuradio-OFDM_OOT)

# Create a package directory that tests can import. It includes everything
# from `python/`.
add_custom_target(
  copy_module_for_tests ALL
  COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}
          ${CMAKE_BINARY_DIR}/test_modules/gnuradio/OFDM_OOT/
)
GR_ADD_TEST(qa_ofdm_precise_sync_cc ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_ofdm_precise_sync_cc.py)
GR_ADD_TEST(qa_ofdm_retreive_data_sym_cc ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_ofdm_retreive_data_sym_cc.py)
GR_ADD_TEST(qa_BER_bbb ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_BER_bbb.py)
GR_ADD_TEST(qa_vector_concat ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/qa_vector_concat.py)
